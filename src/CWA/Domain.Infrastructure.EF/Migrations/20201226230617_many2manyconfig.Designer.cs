// <auto-generated />
using System;
using Domain.Infrastructure.EF;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Domain.Infrastructure.EF.Migrations
{
    [DbContext(typeof(RepositoryContext))]
    [Migration("20201226230617_many2manyconfig")]
    partial class many2manyconfig
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.0");

            modelBuilder.Entity("Domain.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(60);

                    b.Property<DateTime>("ProductRegisterDate")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Product");

                    b.HasData(
                        new
                        {
                            Id = new Guid("0fdaed30-cd1e-4935-81d3-a5f941d9cd5d"),
                            Name = "IPhone X",
                            ProductRegisterDate = new DateTime(2020, 12, 26, 23, 6, 17, 78, DateTimeKind.Utc).AddTicks(2205),
                            UnitPrice = 1000m
                        });
                });

            modelBuilder.Entity("Domain.ProductsTags", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("TagId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.HasIndex("TagId");

                    b.ToTable("ProductsTags");

                    b.HasData(
                        new
                        {
                            Id = new Guid("ded8718f-a05b-4ac9-92b7-828551469831"),
                            ProductId = new Guid("0fdaed30-cd1e-4935-81d3-a5f941d9cd5d"),
                            TagId = new Guid("f025ad17-e714-4ede-8b9c-c6053471e106")
                        });
                });

            modelBuilder.Entity("Domain.Tag", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(60);

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Tag");

                    b.HasData(
                        new
                        {
                            Id = new Guid("f025ad17-e714-4ede-8b9c-c6053471e106"),
                            Name = "Mobile phone"
                        });
                });

            modelBuilder.Entity("Domain.ProductsTags", b =>
                {
                    b.HasOne("Domain.Product", "Product")
                        .WithMany("ProductsTags")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Tag", "Tag")
                        .WithMany("ProductsTags")
                        .HasForeignKey("TagId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
